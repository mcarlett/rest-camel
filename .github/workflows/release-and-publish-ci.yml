name: Create and deploy Maven Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Release version'
        required: true
        default: '0.0.0'
      devel-version:
        description: 'Development version'
        required: true
        default: '0.0.0-SNAPSHOT'
      release-branch:
        description: 'Release branch'
        required: true
        default: 'master'    
      devel-branch:
        description: 'Development branch'
        required: true
        default: 'jboss-repo'

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    name: "Release and publish Maven artifact"
    steps:
    - id: checkout
      name: "Checkout"
      uses: actions/checkout@v2
      with:
          fetch-depth: 0
    - id: setup-jdk
      name: "Set up JDK 11"
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: 'adopt'
    - id: perform
      name: "Perform Release"
      uses: mcarlett/release-explicit-version-action@v0.28
      with:
        release-version: ${{ github.event.inputs.release-version }}
        devel-version: ${{ github.event.inputs.devel-version }}
        devel-branch: ${{ github.event.inputs.devel-branch }}
        release-branch: ${{ github.event.inputs.release-branch }}
    - id: install-package
      name: "Install package"
      run: mvn clean install -U -B -DskipTests=true
    - id: maven-verify
      name: "Maven Verify"
      run: mvn -B verify
    - id: custom-settings
      name: "Create custom Maven settings"
      uses: whelk-io/maven-settings-xml-action@v14
      with:
        servers: '[{"id":"jboss-releases-repository","username":"${env.JBOSS_USERNAME}","password":"${env.JBOSS_PASSWORD}"},{"id":"jboss-snapshots-repository","username":"${env.JBOSS_USERNAME}","password":"${env.JBOSS_PASSWORD}"}]'
    - id: maven-deploy
      name: "Maven Deploy"
      run: mvn deploy -DskipTests
      env:
        JBOSS_USERNAME: ${{ secrets.JBOSS_USERNAME }}
        JBOSS_PASSWORD: ${{ secrets.JBOSS_PASSWORD }}
    - id: create-release
      name: "Create GitHub Release"
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: refs/tags/${{ steps.perform.outputs.generated-tag }}
        release_name: Release ${{ steps.perform.outputs.generated-tag }}
        draft: false
        prerelease: false    
    - id: show-tag
      name: "Show generated tag"
      run: "echo generated release: ${{ steps.perform.outputs.generated-tag }}"
      shell: bash
